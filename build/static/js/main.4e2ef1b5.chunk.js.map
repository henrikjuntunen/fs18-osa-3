{"version":3,"sources":["services/rekisteri3c.js","components/Clock3c.js","components/Notification3c.js","Puhelinluettelo3c.js","index.js"],"names":["baseUrl","rekisteri3c","getAll","axios","get","getAllPersons","then","response","data","create","newObject","post","update","id","put","concat","remove","delete","getById","Clock","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","date","Date","_this2","timerID","setInterval","tick","clearInterval","setState","react_default","a","createElement","className","toLocaleTimeString","React","Component","Notification","message","App","notify","notification","console","log","setTimeout","handleAddPerson","event","preventDefault","indeksi","myFunctionA","persons","newName","length","window","confirm","name","number","newNumber","personsService","catch","error","taulu","myFunctionC","myFunctionB","toISOString","handleNameChange","target","value","handleNumberChange","handleFilterChange","newFilter","handleOnClickPoista","arvo","arvon","filter","person","personIdMax","errorMessage1","errorMessage2","errorMessage3","messageType","showNoteC","bind","assertThisInitialized","r","i","taulu1","poista","taulu2","slice","result","_this3","rajauksenL","p","toLowerCase","substring","rajauksenT","_this4","Clock3c","Puhelinluettelo3c_Rajaa","v","oc","onSubmit","Notification3c","Puhelinluettelo3c_Nimi","Puhelinluettelo3c_Numero","type","rajauksenFilter","map","key","onClick","Rajaa","onChange","Nimi","Numero","ReactDOM","render","Puhelinluettelo3c","document","getElementById"],"mappings":"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","file":"static/js/main.4e2ef1b5.chunk.js","sourcesContent":["import axios from 'axios'\n// const baseUrl = 'http://localhost:5000/api/persons'\n// const baseUrl = 'https://safe-headland-53320.herokuapp.com/api/persons'\nconst baseUrl = '/api/persons'\n// 2018-11-05\n\nconst getAll = () => {\n  return axios.get(baseUrl)\n}\n\nconst getAllPersons = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n// (method) AxiosStatic.create(config?: AxiosRequestConfig): AxiosInstance\n// (method) AxiosInstance.post<any>(url: string, data?: any, config?: AxiosRequestConfig): AxiosPromise<any>\nconst create = (newObject) => {\n  axios.create()\n  return axios.post(baseUrl, newObject)\n}\n\n// (method) AxiosInstance.put<any>(url: string, data?: any, config?: AxiosRequestConfig): AxiosPromise<any>\nconst update = (id, newObject) => {\n  return axios.put(`${baseUrl}/${id}`, newObject)\n}\n\n// (method) AxiosInstance.delete(url: string, config?: AxiosRequestConfig): AxiosPromise<any>\n// axios.delete(url[, config])\nconst remove = (id, newObject) => {\n  return axios.delete(`${baseUrl}/${id}`, newObject)\n}\n\nconst getById = (id, newObject) => {\n  return axios.get(`${baseUrl}/${id}`, newObject)\n}\n\n\nexport default { getAll, getAllPersons, create, update, remove, getById }","import React from 'react';\nimport './clock3c.css'\n\nclass Clock extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {date: new Date()};\n    }\n  \n    componentDidMount() {\n      this.timerID = setInterval(\n        () => this.tick(),\n        1000\n      );\n    }\n  \n    componentWillUnmount() {\n      clearInterval(this.timerID);\n    }\n  \n    tick() {\n      this.setState({\n        date: new Date()\n      });\n    }\n  \n    render() {\n      return (\n        <div className = 'clock'>\n          <h2>Hello, react!</h2>\n          <h2>It is {this.state.date.toLocaleTimeString()}.</h2>\n        </div>\n      );\n    }\n  }\n\n  export default Clock;\n  /*\n  ReactDOM.render(\n    <Clock />,\n    document.getElementById('root')\n  );\n  */\n","import React from 'react';\nimport './notification3c.css';\n\nclass Notification extends React.Component {\n    constructor(props){\n        super(props)\n    }\n    render() {\n        if (this.props.message === null) {\n            return null\n        } else {\n\n            return (\n                <div className=\"notification\"> \n      {this.props.message}\n      </div>\n    );\n        }\n}\n}\n\nexport default Notification;\n\n/*\n// solutions/part2/phonebook/src/components/Notification.js\nimport React from 'react'\n\nconst Notification = ({message}) => {\n  if (message === null) {\n    return null\n  }\n  return(\n    <div className='notification'>\n      { message }\n    </div>\n  )\n}\n\nexport default Notification\n*/","import React from 'react'\nimport personsService from './services/rekisteri3c' \nimport Clock from './components/Clock3c'\nimport Notification from './components/Notification3c'\n\n// Osa 2 tehtävä \n// 2.14 - 2.19\n// 1.10.2018 HJ\n/*\n2.14 puhelinluettelo osa 7\nPalataan jälleen puhelinluettelon pariin.\n\nTällä hetkellä luetteloon lisättäviä uusia numeroita ei synkronoida palvelimelle. Korjaa tilanne.\n\n2.15 puhelinluettelo osa 8\nSiirrä palvelimen kanssa kommunikoinnista vastaava toiminnallisuus omaan moduuliin osan 2 esimerkin tapaan.\n\nEli asia mistä App on kiinnostunut on parametrin kentässä response.data.\n\nModuulia olisi miellyttävämpi käyttää, jos se HTTP-pyynnön vastauksen sijaan palauttaisi suoraan muistiinpanot sisältävän taulukon. Tällöin moduulin käyttö näyttäisi seuraavalta\ntämä seruraavassa versiossa\n\n2.16 puhelinluettelo osa 9\nTee ohjelmaan mahdollisuus yhteystietojen poistamiseen. Poistaminen voi tapahtua esim. nimen yhteyteen liitetyllä napilla. Poiston suorittaminen voidaan varmistaa käyttäjältä window.confirm-metodilla:\n\n2.17* puhelinluettelo osa 10\nMuuta toiminnallisuutta siten, että jos jo olemassaolevalle henkilölle lisätään numero, korvaa lisätty numero aiemman numeron. Korvaaminen kannattaa tehdä HTTP PUT -pyynnöllä.\n(ei tehty PUT pyynnöllä)\n\n2.18 puhelinluettelo osa 11\nToteuta osan 2 esimerkin parempi virheilmoitus tyyliin ruudulla muutaman sekunnin näkyvä ilmoitus, joka kertoo onnistuneista operaatioista (henkilön lisäys ja poisto, sekä numeron muutos):\n\n2.19* puhelinluettelo osa 12\nJos poistat jonkun henkilön toisesta selaimesta hieman ennen kun yrität muuttaa henkilön numeroa toisesta selaimesta, tapahtuu virhetilanne:\n\nTODO\n:3001/persons/5:1 DELETE http://localhost:3001/persons/5 404 (Not Found)\nPuhelinluettelo.2.19.js:235 remove error Error: Request failed with status code 404\n    at createError (createError.js:17)\n    at settle (settle.js:19)\n    at XMLHttpRequest.handleLoad (xhr.js:78)\n\nTODO\n\n:3001/persons/8:1 DELETE http://localhost:3001/persons/8 404 (Not Found)\nPuhelinluettelo.2.19.js:288 render Puhelinluettelo\n\nPuhelinluettelo.2.19.js:106 remove error Error: Request failed with status code 404\n    at createError (createError.js:17)\n    at settle (settle.js:19)\n    at XMLHttpRequest.handleLoad (xhr.js:78)\n\n*/\nclass App extends React.Component {\n    \n    constructor(props) {\n        super(props)\n        this.state = {\n            persons: [\n            {   \n                name: 'Arto Hellas Parikka',\n                number: '040-5551235467', \n                date: '2017-12-10T17:30:31.098Z',\n                id: 1\n            }\n            ],\n            newName: '',\n            newNumber: '',\n            newFilter: '',\n            personIdMax: 6,\n            errorMessage1: '... jokin meni pieleen ...',\n            errorMessage2: '... poisto onnistui ...',\n            errorMessage3: '... tapaus lisätty ...',\n            messageType: 'success', // 'note' 'error'\n            showNoteC: false,\n            notification: null\n        }\n        this.handleAddPerson = this.handleAddPerson.bind(this)\n        this.handleFilterChange = this.handleFilterChange.bind(this)\n        this.handleNameChange = this.handleNameChange.bind(this)\n        this.handleNumberChange = this.handleNumberChange.bind(this)\n        this.handleOnClickPoista = this.handleOnClickPoista.bind(this)\n        console.log('constructor Puhelinluettelo')\n    }\n    \n\nnotify = (notification) => {\n    console.log('notify 001', notification, this.state.notification)\n    this.setState({ notification })\n    console.log('notify 002', notification, this.state.notification)\n    setTimeout(() => {\n      this.setState({ notification: null })\n    }, 5000)\n}\n\n    // moduulin funktioita käytetään importatun muuttujan noteService kautta seuraavasti:\n    componentDidMount(){\n        console.log('did mount Puhelinluettelo')        \n        personsService\n        .getAll()\n        .then( response => {\n        // this.setState({persons: this.state.persons.concat(response.data)})\n           this.setState({persons: response.data})\n            console.log('response getAll()', response)\n            console.log('response.data', response.data)\n        })\n \n    }\n \n\n      // addPerson() lisätään henkilön tiedot puhelinluetteloon\n\n      handleAddPerson = (event) => {\n        event.preventDefault()\n        //debugger\n        let indeksi = this.myFunctionA(this.state.persons, this.state.newName)\n        //debugger\n        if (indeksi === this.state.persons.length) {\n\n        } else {\n         if   (window.confirm('Korvataanko? ' + this.state.persons[indeksi].name +\n            ' ' + this.state.persons[indeksi].number +\n            '. Tällä uudella tiedolla: ' + this.state.newName +\n            ' ' + this.state.newNumber )) {\n            // jos korvataan niin poistetaan vanha alta pois\n            personsService\n            .remove(this.state.persons[indeksi].id)\n            .catch(error => { console.log('remove error', error)})\n            // TODO miksi sate ja db pitää pitää samassa tahdissa - \n            let taulu = this.setState({persons: this.myFunctionC(this.state.persons, \n                (this.myFunctionB(this.state.persons, this.state.persons[indeksi].id)))})\n                console.log('taulu 004', taulu)\n                        //debugger\n                this.notify(`${this.state.persons[indeksi].name} removed`)\n                \n            }\n        } \n        const newObject = {\n            name: this.state.newName,\n            number: this.state.newNumber,\n            date: new Date().toISOString()\n        }\n        personsService\n          .create(newObject)\n          .then(response => {\n              this.setState({\n                  persons: this.state.persons.concat(response.data),\n                  newName: '',\n                  newNumber: ''\n              })\n                            //debugger\n                            this.notify(`${newObject.name} ${newObject.number} added`)\n                        })\n        \n      }\n  \n      \n      handleNameChange = (event) => {\n      //  console.log(event.target.value)\n        this.setState({ newName: event.target.value })\n      }\n\n      handleNumberChange = (event) => {\n      //  console.log(event.target.value)\n        this.setState({ newNumber: event.target.value })\n      }\n\n      handleFilterChange = (event) => {\n        console.log(event.target.value)\n        this.setState({ newFilter: event.target.value })\n      }\n      \n      // remove poista\n      // etsitään taulukon indeksi jotta voidaan ottaa pois taulukosta joka on talletettuna tilaan\n\n\n      //function etsi name - palauttaa indeksin tai lengthin jos ei löydy\nmyFunctionA(taulu, value) {\n   // console.log('myfunctionA ', taulu, ' ', value)\n    let r = taulu.length;\nfor ( let i = 0; i < taulu.length; i++) {\nconsole.log('nimi ', i, ' ', taulu[i].name, ' onko ' , value)\n     if ( taulu[i].name === value ) {  // compare strings\n                                r = i ;\n                                i = taulu.length ;}\n    };\nreturn(r);\n}\n\n\n//function etsi id - palauttaa indeksin josta löytyy tai lengthin jos ei löydy\nmyFunctionB(taulu, value) {\n    let r = taulu.length;\nfor ( let i = 0; i < taulu.length; i++)\n    { if ( taulu[i].id === value ) {\n                                r = i ;\n                                i = taulu.length ;}\n    };\nreturn(r);\n}\n\n\n\n//function \nmyFunctionC(taulu1, poista) {\n// poisteaan alkio taulusta indeksin kohdasta poista\nconst taulu2 = taulu1.slice(0, poista).concat(taulu1.slice((poista + 1)))\nconsole.log('taulu2 001', taulu2)\nreturn(taulu2)\n}\n\n\n// TODO miten välitetään arvo tähän poistoon valitusta rivistä\nhandleOnClickPoista = (arvo) => {\n          // arvo on person.id\n         // debugger\n        if (window.confirm('poistetaanko: ' + arvo)) {\n            let arvon =\n            this.state.persons.filter(person=>person.id===arvo)\n            personsService\n            .remove(arvo)\n            .then(response => {\n              this.setState({ \n                persons: this.state.persons.filter(person=>person.id!==arvo) \n              })\n              //debugger\n              this.notify(`${arvo} ${arvon[0].name} removed`)\n            })\n        }\n}\n\nrajauksenL(){\n          return(this.state.newFilter.length)\n}\n\nrajauksenT(){\n          return(this.state.newFilter)\n}\n\nrajauksenFilter(){\n          let result\n          if ( this.rajauksenL() < 1 )\n          { result = this.state.persons\n            console.log('rejauksenFilter 001', result, this.state.persons) }\n          //return(this.state.persons)}\n          else\n          {   //return(this.state.persons.filter( \n              result = this.state.persons.filter( \n                  p => p.name.toLowerCase().substring(0, \n                    this.rajauksenL()) === this.rajauksenT().toLowerCase())\n                    //    )\n                    console.log('rejauksenFilter 002') }\n          console.log('rajauksenFilter 003', result)\n          return (result)\n}\n\n        render(){\n            console.log('render Puhelinluettelo')\n// TODO miksi formin sisässä onClick ei toiminut counterissa ?\n        return ( // return of render of App\n           <div>\n    <h2>Puhelinluettelo</h2>\n<Clock />\n\n    <Rajaa v={this.state.newFilter} oc={this.handleFilterChange}/>\n    <form onSubmit={this.handleAddPerson}>\n    <Notification message={this.state.notification}/>\n    <Nimi  \n    v={this.state.newName} \n    oc={this.handleNameChange} />\n    <Numero \n    v={this.state.newNumber}\n    oc={this.handleNumberChange}\n    />\n    <div>\n    <button type=\"submit\">lisää</button>\n    </div>\n    </form>\n    <div>\n        <h2>Numerot</h2>\n        <table>\n            <thead>\n            </thead>\n            <tbody>\n{this.rajauksenFilter().map( (p) => \n<tr key = {p.id}> \n<td>{p.id}</td>\n<td>{p.name}</td> \n<td>{p.number}</td>\n<td>\n<button onClick={this.handleOnClickPoista.bind(this, p.id)}>poista</button>\n</td>\n</tr> )}       \n            </tbody>\n        </table>\n        </div>\n    </div>\n    ) // end return of render of App\n} // end render of App\n} // end component App\n\nconst Rajaa = (props) =>{\n    return(\n        <div>\n        rajaa näytettäviä nimiä:<input value={props.v} \n        onChange={props.oc}/>\n        </div>\n    )\n}\n\nconst Nimi = (props) => {\n    return(\n    <div>\n    nimi:<input value={props.v} \n    onChange={props.oc}/>\n    </div>\n    )\n}\n\nconst Numero = (props) => {\n    return(\n    <div>\n    number:<input value={props.v} \n    onChange={props.oc}/>\n    </div>\n    )\n}\n\nexport default App\n\n\n// TODO (3)\n// rivit tuplaantuvat (itse asiassa kertaanuvat) näytöllä \n/* \nPuhelinluettelo\nHello, react!\nIt is 15:06:33.\nrajaa näytettäviä nimiä:\nnimi:\nnumber:\nlisää\nNumerot\n36\tKissa\t12\tpoista\n24\tKoira\t23\tpoista\n13\tPaviaani\t34\tpoista\n16\tKaniini\t56\tpoista\n36\tKissa\t12\tpoista\n24\tKoira\t23\tpoista\n13\tPaviaani\t34\tpoista\n16\tKaniini\t56\tpoista\n85\tIlves\t67\tpoista\n*/","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App3c from './Puhelinluettelo3c'\n// 2018-11-05\nReactDOM.render(\n    <App3c />,\n    document.getElementById('root')\n    )"],"sourceRoot":""}